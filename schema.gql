# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: ID!
  email: String!
  name: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type TokenType {
  token: String!
  role: String!
  name: String!
}

type Author {
  id: ID!
  name: String!
  imageUrl: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  registeredBy: String!
  updatedBy: String!
}

type Internationalization {
  id: ID!
  language: String!
  synopsis: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type LiteraryWorkType {
  id: ID!
  name: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  registeredBy: String!
  updatedBy: String!
  language: Language!
  synopsis: String!
  country: String!
  bagShape: String!
  publisher: String!
  dimensions: String!
  imageUrl: String!
  status: Status!
  categories: String!
  edition: Edition!
  type: Type!
  paperType: PaperType!
  ilustratorBy: String!
  writterBy: String!
  startOfPublication: DateTime!
  endOfPublication: DateTime
  originalPublisher: String!
  releaseFrequency: String!
}

enum Language {
  ptBR
  enUS
}

enum Status {
  Complete
  InProgress
  Hiatus
}

enum Edition {
  omnibus
  bunkoban
  tankobon
  shinsoban
  wideBan
  kanzenban
  kyukyokuban
  fullColor
  deluxe
  Soshuhen
}

enum Type {
  japaneseComicBook
  comicBook
  book
}

enum PaperType {
  newsPrint
  offset
  chamois
  couche
  pollen
}

type LiteraryWorkCollectionType {
  id: ID!
  name: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  registeredBy: String!
  updatedBy: String!
  language: Language!
  synopsis: String
  country: String!
  bagShape: String!
  publisher: String!
  dimensions: String!
  imageUrl: String!
  status: Status!
  categories: String!
  edition: Edition!
  type: Type!
  paperType: PaperType!
  ilustratorBy: String!
  writterBy: String!
  startOfPublication: DateTime!
  endOfPublication: DateTime
  originalPublisher: String!
  releaseFrequency: String!
  adquiredVolumes: Int!
  totalVolumes: Int!
}

type GetUserLiteraryWorksType {
  literaryWorks: [LiteraryWorkCollectionType!]!
  totalLiteraryWorks: Int!
  completeLiteraryWorks: Int!
  totalVolumes: Int!
  memberSince: DateTime!
}

type VolumeType {
  id: ID!
  name: String!
  synopsis: String!
  language: String!
  coverPriceUnit: String!
  coverPrice: String!
  number: Float!
  imageUrl: String!
  publication: DateTime!
  paperType: String!
  type: String!
  dimensions: String!
  edition: String!
  country: String!
  categories: String!
  haveVolume: Boolean
  purchasedPrice: String
  purchasedDate: DateTime
  createdAt: DateTime!
  updatedAt: DateTime!
}

type UserVolumeType {
  id: ID!
  purchasedPrice: Float!
  purchasedDate: DateTime!
  purchasedPriceUnit: Coin!
  createdAt: DateTime!
  updatedAt: DateTime!
}

enum Coin {
  BRL
  USD
  EUR
  JPY
}

type Query {
  user: User!
  author(id: String!): Author!
  internationalization(id: String!): Internationalization!
  getAllLiteraryWorks(input: getAllLiteraryWork!): [LiteraryWorkType!]!
  getUserLiteraryWorks(language: Language!): GetUserLiteraryWorksType!
  LiteraryWork(input: GetLiteraryWorkInput!): LiteraryWorkType!
  getAllVolumes(input: getAllVolume!): [VolumeType!]!
  Volume(input: GetVolumeInput!): VolumeType!
  getAllUserVolumes(input: getAllVolume!): [UserVolumeType!]!
  UserVolume(id: String!): UserVolumeType!
  getCollectionValue(coin: Coin!): String!
}

input getAllLiteraryWork {
  offset: Int!
  limit: Int!
  language: Language!
  name: String
}

input GetLiteraryWorkInput {
  id: ID!
  language: Language!
}

input getAllVolume {
  offset: Int!
  limit: Int!
  language: Language!
  literaryWork: String
}

input GetVolumeInput {
  id: ID!
  language: Language!
}

type Mutation {
  updateUser(input: UpdateUserInput!): String!
  deleteUser: Boolean!
  loginUser(input: LoginInput!): TokenType!
  createAuthor(input: CreateUserInput!): Author!
  updateAuthor(input: UpdateAuthorInput!): String!
  deleteAuthor(id: String!): Boolean!
  createInternationalization(input: CreateInternationalizationInput!): Internationalization!
  updateInternationalization(input: UpdateInternationalizationInput!): String!
  deleteInternationalization(id: String!): Boolean!
  createLiteraryWork(input: CreateLiteraryWorkInput!): LiteraryWorkType!
  updateLiteraryWork(input: UpdateLiteraryWorkInput!): String!
  deleteLiteraryWork(id: String!): Boolean!
  createVolume(input: CreateVolumeInput!): VolumeType!
  updateVolume(input: UpdateVolumeInput!): String!
  deleteVolume(id: String!): Boolean!
  createUserVolume(input: CreateUserVolumeInput!): UserVolumeType!
  updateUserVolume(input: UpdateUserVolumeInput!): String!
  deleteUserVolume(volumeId: String!): Boolean!
}

input UpdateUserInput {
  id: ID!
  email: String!
  name: String!
  password: String
}

input LoginInput {
  reqTokenId: String!
}

input CreateUserInput {
  name: String!
  imageUrl: String!
}

input UpdateAuthorInput {
  id: ID!
  name: String!
  imageUrl: String!
}

input CreateInternationalizationInput {
  language: Language!
  synopsis: String!
  literaryWork: String
  volume: String
}

input UpdateInternationalizationInput {
  id: ID!
  language: String!
  synopsis: String!
  edition: String!
  type: String!
  paperType: String!
  country: String!
}

input CreateLiteraryWorkInput {
  name: String!
  bagShape: String!
  language: Language!
  publisher: String!
  originalPublisher: String!
  dimensions: String!
  imageUrl: String!
  status: Status!
  country: String!
  categories: [Categories!]!
  edition: Edition!
  type: Type!
  paperType: PaperType!
  ilustratorBy: String!
  writterBy: String!
  releaseFrequency: String!
  startOfPublication: DateTime!
  endOfPublication: DateTime
}

enum Categories {
  ACTION
  SEINEN
  SHOUNEN
  SHOUJO
  HENTAI
  ECCHI
  YAOI
  YURI
  JOSEI
  GEKIGA
  KODOMO
  ADULT
  MARTIAL_ARTS
  ADVENTURE
  DRAMA
  HISTORICAL
  ANTHOLOGIES
  CHILDREN
  MIDDLE
  FANTASY
  PICTURE_BOOK
  CHRISTIAN
  CLASSICS
  COMICS
  GRAPHIC_NOVELS
  FICTION
  GAMES
  COMEDY
  REALISM
  MYSTERY
  CRIME
  PLAYS
  SCRIPTS
  POETRY
  ROMANCE
  PARANORMAL
  TIME_TRAVEL
  DYSTOPIAN
  MILITARY
  SCIENCE
  POST_APOCALYPTIC
  STEAMPUNK
  SPACE
  TALES
  MOTIVATIONS
  SUSPENSE
  ESPIONAGE
  MEDICAL
  COMPUTER_SCIENCE
  AGRICULTURE
  BIOGRAPHY
}

input UpdateLiteraryWorkInput {
  id: ID!
  name: String!
  bagShape: String!
  language: Language!
  publisher: String!
  originalPublisher: String!
  dimensions: String!
  imageUrl: String!
  status: Status!
  country: String!
  categories: [Categories!]!
  edition: Edition!
  type: Type!
  paperType: PaperType!
  ilustratorBy: String!
  writterBy: String!
  releaseFrequency: String!
  startOfPublication: DateTime!
  endOfPublication: DateTime!
}

input CreateVolumeInput {
  dimensions: String
  coverPriceUnit: Coin!
  coverPrice: Float!
  number: Float!
  imageUrl: String!
  publication: DateTime!
  paperType: PaperType
  literaryWork: String!
}

input UpdateVolumeInput {
  id: ID!
  dimensions: String!
  language: String!
  coverPriceUnit: String!
  coverPrice: Float!
  number: Float!
  imageUrl: String!
  publication: DateTime!
  paperType: String!
  literaryWork: String!
}

input CreateUserVolumeInput {
  purchasedPrice: Float
  purchasedDate: DateTime!
  purchasedPriceUnit: Coin
  volume: String!
}

input UpdateUserVolumeInput {
  purchasedPrice: Float
  purchasedDate: DateTime
  purchasedPriceUnit: Coin
  volume: String!
}